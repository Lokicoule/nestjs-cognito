2:I[8017,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","937","static/chunks/app/guides/public-route/page-a476fefc022d3c87.js"],"Code"]
3:I[1995,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","937","static/chunks/app/guides/public-route/page-a476fefc022d3c87.js"],"Heading"]
4:I[8017,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","937","static/chunks/app/guides/public-route/page-a476fefc022d3c87.js"],"Pre"]
a:I[9943,[],""]
b:I[249,[],""]
5:T1119,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { Authentication</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> PublicRoute</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> CognitoUser } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@nestjs-cognito/auth&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { Controller</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> Get } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@nestjs/common&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Controller</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;api&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Authentication</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AppController</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">PublicRoute</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Get</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;welcome&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">welcomeUser</span><span style="color: var(--shiki-color-text)">(@</span><span style="color: var(--shiki-token-function)">CognitoUser</span><span style="color: var(--shiki-color-text)">() user</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">User</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> user </span></span>
<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">`Welcome back, </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-token-constant)">user</span><span style="color: var(--shiki-color-text)">.username</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">!`</span><span style="color: var(--shiki-color-text)"> </span></span>
<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Welcome, guest!&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>6:Tb85,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Controller</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;api&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Authentication</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AppController</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">PublicRoute</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Get</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;welcome&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">getMessage</span><span style="color: var(--shiki-color-text)">(@</span><span style="color: var(--shiki-token-function)">CognitoUser</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;username&#39;</span><span style="color: var(--shiki-color-text)">) username</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">`Hello </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-color-text)">username </span><span style="color: var(--shiki-token-keyword)">??</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;stranger&#39;</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>7:T11e3,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Controller</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;content&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Authentication</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ContentController</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">PublicRoute</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Get</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;article/:id&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">getArticle</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">    @</span><span style="color: var(--shiki-token-function)">Param</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;id&#39;</span><span style="color: var(--shiki-color-text)">) id</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    @</span><span style="color: var(--shiki-token-function)">CognitoUser</span><span style="color: var(--shiki-color-text)">() user</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">User</span></span>
<span><span style="color: var(--shiki-color-text)">  ) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">article</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">articleService</span><span style="color: var(--shiki-token-function)">.findById</span><span style="color: var(--shiki-color-text)">(id);</span></span>
<span><span style="color: var(--shiki-color-text)">    </span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> user</span></span>
<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> article </span><span style="color: var(--shiki-token-comment)">// Full article for authenticated users</span></span>
<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">article</span><span style="color: var(--shiki-color-text)">.preview; </span><span style="color: var(--shiki-token-comment)">// Preview for guests</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>8:Tf24,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">PublicRoute</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Get</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;profile&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getProfile</span><span style="color: var(--shiki-color-text)">(@</span><span style="color: var(--shiki-token-function)">CognitoUser</span><span style="color: var(--shiki-color-text)">() user</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> User) {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-keyword)">!</span><span style="color: var(--shiki-color-text)">user) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">      message</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Log in to view your full profile&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      preview</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span></span>
<span><span style="color: var(--shiki-color-text)">    };</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    message</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Your profile details&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    data</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">userService</span><span style="color: var(--shiki-token-function)">.getFullProfile</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">user</span><span style="color: var(--shiki-color-text)">.sub)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    preview</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span></span>
<span><span style="color: var(--shiki-color-text)">  };</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>9:Tdf4,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Controller</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;api&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Authentication</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ApiController</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">PublicRoute</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Get</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;basic-info&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">getBasicInfo</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> { version</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;1.0.0&#39;</span><span style="color: var(--shiki-color-text)"> };</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Get</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;sensitive-info&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">getSensitiveInfo</span><span style="color: var(--shiki-color-text)">(@</span><span style="color: var(--shiki-token-function)">CognitoUser</span><span style="color: var(--shiki-color-text)">() user</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">User</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> { secretData</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;only for authenticated users&#39;</span><span style="color: var(--shiki-color-text)"> };</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>0:["AG1NeZbtIS3t-faK8XZ-V",[[["",{"children":["guides",{"children":["public-route",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",{"children":["guides",{"children":["public-route",{"children":["__PAGE__",{},[["$L1",["$","article",null,{"className":"flex h-full flex-col pb-10 pt-16","children":[["$","div",null,{"className":"flex-auto prose dark:prose-invert [html_:where(&>*)]:mx-auto [html_:where(&>*)]:max-w-2xl [html_:where(&>*)]:lg:mx-[calc(50%-min(50%,theme(maxWidth.lg)))] [html_:where(&>*)]:lg:max-w-3xl","children":[["$","h1",null,{"children":"Public Route"}],"\n",["$","p",null,{"children":["The ",["$","$L2",null,{"children":"@PublicRoute"}]," decorator allows you to create endpoints that are accessible to both authenticated and unauthenticated users while maintaining security when credentials are provided."]}],"\n",["$","$L3",null,{"level":2,"id":"overview","children":"Overview"}],"\n",["$","p",null,{"children":"Sometimes you need routes that can serve different content based on the user's authentication status. For example, you might want to show a personalized message for logged-in users while still allowing access to anonymous users."}],"\n",["$","$L3",null,{"level":2,"id":"basic-usage","children":"Basic Usage"}],"\n",["$","$L4",null,{"language":"ts","code":"import { Authentication, PublicRoute, CognitoUser } from '@nestjs-cognito/auth';\nimport { Controller, Get } from '@nestjs/common';\n\n@Controller('api')\n@Authentication()\nexport class AppController {\n  @PublicRoute()\n  @Get('welcome')\n  welcomeUser(@CognitoUser() user?: User) {\n    return user \n      ? `Welcome back, ${user.username}!` \n      : 'Welcome, guest!';\n  }\n}\n","children":["$","$L2",null,{"className":"language-ts","children":"$5"}]}],"\n",["$","$L3",null,{"level":2,"id":"how-it-works","children":"How It Works"}],"\n",["$","p",null,{"children":["When using ",["$","$L2",null,{"children":"@PublicRoute"}]," with ",["$","$L2",null,{"children":"@Authentication"}],", the behavior is as follows:"]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"No JWT Token Present"}],":"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"The route is accessible"}],"\n",["$","li",null,{"children":["The ",["$","$L2",null,{"children":"user"}]," parameter will be ",["$","$L2",null,{"children":"undefined"}]]}],"\n",["$","li",null,{"children":"No authentication checks are performed"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Valid JWT Token Present"}],":"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"The route is accessible"}],"\n",["$","li",null,{"children":"The token is validated"}],"\n",["$","li",null,{"children":["User information is available via ",["$","$L2",null,{"children":"@CognitoUser()"}]]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Invalid JWT Token Present"}],":"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Returns 401 Unauthorized"}],"\n",["$","li",null,{"children":"The route is not accessible"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","$L3",null,{"level":2,"id":"token-validation-priority","children":"Token Validation Priority"}],"\n",["$","p",null,{"children":["When both ",["$","$L2",null,{"children":"@Authentication"}]," and ",["$","$L2",null,{"children":"@PublicRoute"}]," decorators are present:"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["If a JWT token is provided, ",["$","$L2",null,{"children":"@Authentication"}]," takes precedence"]}],"\n",["$","li",null,{"children":"The token must pass all validation checks (signature, expiration, issuer, etc.)"}],"\n",["$","li",null,{"children":"Invalid tokens will result in a 401 Unauthorized response"}],"\n"]}],"\n",["$","$L3",null,{"level":2,"id":"use-cases","children":"Use Cases"}],"\n",["$","h3",null,{"children":"Welcome Message"}],"\n",["$","$L4",null,{"language":"ts","code":"@Controller('api')\n@Authentication()\nexport class AppController {\n  @PublicRoute()\n  @Get('welcome')\n  getMessage(@CognitoUser('username') username?: string) {\n    return `Hello ${username ?? 'stranger'}`;\n  }\n}\n","children":["$","$L2",null,{"className":"language-ts","children":"$6"}]}],"\n",["$","h3",null,{"children":"Content Preview"}],"\n",["$","$L4",null,{"language":"ts","code":"@Controller('content')\n@Authentication()\nexport class ContentController {\n  @PublicRoute()\n  @Get('article/:id')\n  async getArticle(\n    @Param('id') id: string,\n    @CognitoUser() user?: User\n  ) {\n    const article = await this.articleService.findById(id);\n    \n    return user\n      ? article // Full article for authenticated users\n      : article.preview; // Preview for guests\n  }\n}\n","children":["$","$L2",null,{"className":"language-ts","children":"$7"}]}],"\n",["$","$L3",null,{"level":2,"id":"common-patterns","children":"Common Patterns"}],"\n",["$","h3",null,{"children":"Conditional Response"}],"\n",["$","$L4",null,{"language":"ts","code":"@PublicRoute()\n@Get('profile')\nasync getProfile(@CognitoUser() user?: User) {\n  if (!user) {\n    return {\n      message: 'Log in to view your full profile',\n      preview: true\n    };\n  }\n\n  return {\n    message: 'Your profile details',\n    data: await this.userService.getFullProfile(user.sub),\n    preview: false\n  };\n}\n","children":["$","$L2",null,{"className":"language-ts","children":"$8"}]}],"\n",["$","h3",null,{"children":"Mixed Access Levels"}],"\n",["$","$L4",null,{"language":"ts","code":"@Controller('api')\n@Authentication()\nexport class ApiController {\n  @PublicRoute()\n  @Get('basic-info')\n  getBasicInfo() {\n    return { version: '1.0.0' };\n  }\n\n  @Get('sensitive-info')\n  getSensitiveInfo(@CognitoUser() user: User) {\n    return { secretData: 'only for authenticated users' };\n  }\n}\n","children":["$","$L2",null,{"className":"language-ts","children":"$9"}]}]]}],["$","footer",null,{"className":"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl"}]]}],null],null],null]},[null,["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","guides","children","public-route","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","guides","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/nestjs-cognito/_next/static/css/7f0c2e5300d2e547.css","precedence":"next","crossOrigin":"$undefined"}]],"$Lc"],null],null],["$Ld",null]]]]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Public Routes - NestJS Cognito - NestJS-Cognito"}],["$","meta","3",{"name":"description","content":"Learn how to create public routes that are accessible to both authenticated and unauthenticated users in NestJS-Cognito."}],["$","link","4",{"rel":"icon","href":"/favicon.ico"}]]
1:null
e:I[6639,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","384","static/chunks/384-9c61028d6b9f3d71.js","802","static/chunks/802-794afc6f7dd2dd66.js","185","static/chunks/app/layout-962d22ed320370d7.js"],"Providers"]
f:I[9179,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","384","static/chunks/384-9c61028d6b9f3d71.js","802","static/chunks/802-794afc6f7dd2dd66.js","185","static/chunks/app/layout-962d22ed320370d7.js"],"Layout"]
10:I[9727,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","937","static/chunks/app/guides/public-route/page-a476fefc022d3c87.js"],""]
c:["$","html",null,{"lang":"en","className":"h-full","suppressHydrationWarning":true,"children":["$","body",null,{"className":"flex min-h-full bg-white antialiased dark:bg-zinc-900","children":["$","$Le",null,{"children":["$","div",null,{"className":"w-full","children":["$","$Lf",null,{"allSections":{"/":[{"title":"Features","id":"features"},{"title":"Why NestJS-Cognito?","id":"why-nest-js-cognito"}],"/credits":[{"title":"Icons and Visual Assets","id":"icons-and-visual-assets"}],"/quickstart":[{"title":"Installation","id":"installation"},{"title":"Basic Setup","id":"basic-setup"},{"title":"Basic Usage","id":"basic-usage"}],"/api/core-package":[{"title":"Installation","id":"installation"},{"title":"Package Architecture","id":"package-architecture"},{"title":"Basic Usage","id":"basic-usage"},{"title":"Integration with Other Packages","id":"integration-with-other-packages"}],"/api/integration":[{"title":"Common Integration Patterns","id":"common-integration-patterns"},{"title":"Module Integration Examples","id":"module-integration-examples"}],"/api/jwt-verification":[{"title":"JWT Claims Verification","id":"jwt-claims-verification"},{"title":"Cognito JWT Verification","id":"cognito-jwt-verification"},{"title":"RSA JWT Verification","id":"rsa-jwt-verification"}],"/api/module-configuration":[{"title":"Async Configuration","id":"async-configuration"},{"title":"Module Options","id":"module-options"},{"title":"Basic Configuration","id":"basic-configuration"},{"title":"Identity Provider Configuration","id":"identity-provider-configuration"},{"title":"JWT Verification Configuration","id":"jwt-verification-configuration"},{"title":"JWK Cache Configuration","id":"jwk-cache-configuration"},{"title":"Important Notes","id":"important-notes"}],"/guides/authentication":[{"title":"Overview","id":"overview"},{"title":"Basic Setup","id":"basic-setup"},{"title":"Using @Authentication Decorator","id":"using-authentication-decorator"},{"title":"Public Routes","id":"public-routes"},{"title":"Token Verification","id":"token-verification"}],"/guides/authorization":[{"title":"Basic Authorization","id":"basic-authorization"},{"title":"Advanced Rules","id":"advanced-rules"},{"title":"Best Practices","id":"best-practices"}],"/guides/cognito-user":[{"title":"Overview","id":"overview"},{"title":"Usage Patterns","id":"usage-patterns"},{"title":"Available Properties","id":"available-properties"}],"/guides/custom-guards":[{"title":"Understanding AbstractGuard","id":"understanding-abstract-guard"},{"title":"Creating a Custom Guard","id":"creating-a-custom-guard"},{"title":"Using the Custom Guard","id":"using-the-custom-guard"},{"title":"Guard Inheritance Flow","id":"guard-inheritance-flow"},{"title":"Best Practices","id":"best-practices"}],"/guides/public-route":[{"title":"Overview","id":"overview"},{"title":"Basic Usage","id":"basic-usage"},{"title":"How It Works","id":"how-it-works"},{"title":"Token Validation Priority","id":"token-validation-priority"},{"title":"Use Cases","id":"use-cases"},{"title":"Common Patterns","id":"common-patterns"}],"/guides/graphql":[{"title":"Installation","id":"installation"},{"title":"Basic Setup","id":"basic-setup"},{"title":"Authentication","id":"authentication"},{"title":"Authorization","id":"authorization"},{"title":"User Information","id":"user-information"}],"/guides/testing":[{"title":"Getting Started with Testing","id":"getting-started-with-testing"},{"title":"HTTP Testing with Pactum","id":"http-testing-with-pactum"},{"title":"Real E2E Testing","id":"real-e2-e-testing"},{"title":"Mock Testing","id":"mock-testing"},{"title":"Testing Scenarios","id":"testing-scenarios"},{"title":"Advanced Testing","id":"advanced-testing"}],"/guides/websocket":[{"title":"Overview","id":"overview"},{"title":"Implementation","id":"implementation"}]},"children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"mx-auto flex h-full max-w-xl flex-col items-center justify-center py-16 text-center","children":[["$","p",null,{"className":"text-sm font-semibold text-zinc-900 dark:text-white","children":"404"}],["$","h1",null,{"className":"mt-2 text-2xl font-bold text-zinc-900 dark:text-white","children":"Page not found"}],["$","p",null,{"className":"mt-2 text-base text-zinc-600 dark:text-zinc-400","children":"Sorry, we couldn’t find the page you’re looking for."}],["$","$L10",null,{"className":"inline-flex gap-0.5 justify-center overflow-hidden text-sm font-medium transition rounded-full bg-zinc-900 py-1 px-3 text-white hover:bg-zinc-700 dark:bg-emerald-400/10 dark:text-emerald-400 dark:ring-1 dark:ring-inset dark:ring-emerald-400/20 dark:hover:bg-emerald-400/10 dark:hover:text-emerald-300 dark:hover:ring-emerald-300 mt-8","href":"/","children":[false,"Back to docs",["$","svg",null,{"viewBox":"0 0 20 20","fill":"none","aria-hidden":"true","className":"mt-0.5 h-5 w-5 -mr-1","children":["$","path",null,{"stroke":"currentColor","strokeLinecap":"round","strokeLinejoin":"round","d":"m11.5 6.5 3 3.5m0 0-3 3.5m3-3.5h-9"}]}]]}]]}],"notFoundStyles":[]}]}]}]}]}]}]
