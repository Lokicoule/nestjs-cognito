2:I[8017,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","873","static/chunks/app/guides/authorization/page-e97a02d39d93c760.js"],"Code"]
3:I[1995,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","873","static/chunks/app/guides/authorization/page-e97a02d39d93c760.js"],"Heading"]
4:I[8017,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","873","static/chunks/app/guides/authorization/page-e97a02d39d93c760.js"],"Pre"]
a:I[9943,[],""]
b:I[249,[],""]
5:Tf1a,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { Authorization } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@nestjs-cognito/auth&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Controller</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;admin&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AdminController</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Authorization</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;admin&#39;</span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Get</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;settings&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">manageSettings</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Admin settings panel&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Authorization</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;editor&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;admin&#39;</span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Post</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;content&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">createContent</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Create new content&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>6:Te1f,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Controller</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;projects&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ProjectController</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Authorization</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">    requiredGroups</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&#39;project-member&#39;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">     </span><span style="color: var(--shiki-token-comment)">// Must be a project member</span></span>
<span><span style="color: var(--shiki-color-text)">    allowedGroups</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&#39;manager&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;lead&#39;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">     </span><span style="color: var(--shiki-token-comment)">// AND either a manager or lead</span></span>
<span><span style="color: var(--shiki-color-text)">    prohibitedGroups</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&#39;suspended&#39;</span><span style="color: var(--shiki-color-text)">]         </span><span style="color: var(--shiki-token-comment)">// AND not suspended</span></span>
<span><span style="color: var(--shiki-color-text)">  })</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Put</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;:id&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">updateProject</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Update project details&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>7:Tf1f,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { AuthorizationGuard } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@nestjs-cognito/auth&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Controller</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;cats&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">CatsController</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">UseGuards</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">AuthorizationGuard</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">      allowedGroups</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&#39;user&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;admin&#39;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      requiredGroups</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&#39;moderator&#39;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      prohibitedGroups</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&#39;visitor&#39;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    })</span></span>
<span><span style="color: var(--shiki-color-text)">  )</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Get</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">findAll</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;This action requires specific permissions&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>8:T621,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Authorization</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  requiredGroups</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&#39;authenticated&#39;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  allowedGroups</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&#39;premium&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;vip&#39;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  prohibitedGroups</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&#39;banned&#39;</span><span style="color: var(--shiki-color-text)">]</span></span>
<span><span style="color: var(--shiki-color-text)">})</span></span>
<span></span>9:T577,<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Authorization</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&#39;admin&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;moderator&#39;</span><span style="color: var(--shiki-color-text)">])</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Get</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;reports&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-token-function)">getReports</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Access granted to admins or moderators&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>0:["AG1NeZbtIS3t-faK8XZ-V",[[["",{"children":["guides",{"children":["authorization",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",{"children":["guides",{"children":["authorization",{"children":["__PAGE__",{},[["$L1",["$","article",null,{"className":"flex h-full flex-col pb-10 pt-16","children":[["$","div",null,{"className":"flex-auto prose dark:prose-invert [html_:where(&>*)]:mx-auto [html_:where(&>*)]:max-w-2xl [html_:where(&>*)]:lg:mx-[calc(50%-min(50%,theme(maxWidth.lg)))] [html_:where(&>*)]:lg:max-w-3xl","children":[["$","h1",null,{"children":"Authorization"}],"\n",["$","p",null,{"children":["Implement group-based access control using NestJS-Cognito's authorization features. The ",["$","$L2",null,{"children":"@Authorization"}]," decorator includes authentication functionality by default, so you don't need to add the ",["$","$L2",null,{"children":"@Authentication"}]," decorator when using authorization."]}],"\n",["$","$L3",null,{"level":2,"id":"basic-authorization","children":"Basic Authorization"}],"\n",["$","p",null,{"children":"Restrict access to specific Cognito user groups:"}],"\n",["$","$L4",null,{"language":"typescript","code":"import { Authorization } from '@nestjs-cognito/auth';\n\n@Controller('admin')\nexport class AdminController {\n  @Authorization(['admin'])\n  @Get('settings')\n  manageSettings() {\n    return 'Admin settings panel';\n  }\n\n  @Authorization(['editor', 'admin'])\n  @Post('content')\n  createContent() {\n    return 'Create new content';\n  }\n}\n","children":["$","$L2",null,{"className":"language-typescript","children":"$5"}]}],"\n",["$","$L3",null,{"level":2,"id":"advanced-rules","children":"Advanced Rules"}],"\n",["$","p",null,{"children":"Implement complex permission rules with multiple conditions:"}],"\n",["$","$L4",null,{"language":"typescript","code":"@Controller('projects')\nexport class ProjectController {\n  @Authorization({\n    requiredGroups: ['project-member'],     // Must be a project member\n    allowedGroups: ['manager', 'lead'],     // AND either a manager or lead\n    prohibitedGroups: ['suspended']         // AND not suspended\n  })\n  @Put(':id')\n  updateProject() {\n    return 'Update project details';\n  }\n}\n","children":["$","$L2",null,{"className":"language-typescript","children":"$6"}]}],"\n",["$","p",null,{"children":"Apply authorization rules using the guard directly:"}],"\n",["$","$L4",null,{"language":"typescript","code":"import { AuthorizationGuard } from '@nestjs-cognito/auth';\n\n@Controller('cats')\nexport class CatsController {\n  @UseGuards(\n    AuthorizationGuard({\n      allowedGroups: ['user', 'admin'],\n      requiredGroups: ['moderator'],\n      prohibitedGroups: ['visitor'],\n    })\n  )\n  @Get()\n  findAll() {\n    return 'This action requires specific permissions';\n  }\n}\n","children":["$","$L2",null,{"className":"language-typescript","children":"$7"}]}],"\n",["$","$L3",null,{"level":2,"id":"best-practices","children":"Best Practices"}],"\n",["$","h3",null,{"children":"Group Structure"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Hierarchical Groups"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Create clear group hierarchies (e.g., 'admin' > 'manager' > 'user')"}],"\n",["$","li",null,{"children":"Use descriptive group names that reflect roles"}],"\n",["$","li",null,{"children":"Keep groups focused on specific responsibilities"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Permission Management"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Apply the principle of least privilege"}],"\n",["$","li",null,{"children":"Use required groups for mandatory permissions"}],"\n",["$","li",null,{"children":"Use allowed groups for optional access levels"}],"\n",["$","li",null,{"children":"Use prohibited groups for explicit denials"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","h3",null,{"children":"Implementation Tips"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Combining Rules"}]}],"\n",["$","$L4",null,{"language":"typescript","code":"@Authorization({\n  requiredGroups: ['authenticated'],\n  allowedGroups: ['premium', 'vip'],\n  prohibitedGroups: ['banned']\n})\n","children":["$","$L2",null,{"className":"language-typescript","children":"$8"}]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Multiple Group Checks"}]}],"\n",["$","$L4",null,{"language":"typescript","code":"@Authorization(['admin', 'moderator'])\n@Get('reports')\ngetReports() {\n  return 'Access granted to admins or moderators';\n}\n","children":["$","$L2",null,{"className":"language-typescript","children":"$9"}]}],"\n"]}],"\n"]}]]}],["$","footer",null,{"className":"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl"}]]}],null],null],null]},[null,["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","guides","children","authorization","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","guides","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/nestjs-cognito/_next/static/css/7f0c2e5300d2e547.css","precedence":"next","crossOrigin":"$undefined"}]],"$Lc"],null],null],["$Ld",null]]]]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Authorization - NestJS Cognito - NestJS-Cognito"}],["$","meta","3",{"name":"description","content":"Learn how to implement group-based authorization and access control with NestJS-Cognito."}],["$","link","4",{"rel":"icon","href":"/favicon.ico"}]]
1:null
e:I[6639,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","384","static/chunks/384-9c61028d6b9f3d71.js","802","static/chunks/802-794afc6f7dd2dd66.js","185","static/chunks/app/layout-962d22ed320370d7.js"],"Providers"]
f:I[9179,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","384","static/chunks/384-9c61028d6b9f3d71.js","802","static/chunks/802-794afc6f7dd2dd66.js","185","static/chunks/app/layout-962d22ed320370d7.js"],"Layout"]
10:I[9727,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","873","static/chunks/app/guides/authorization/page-e97a02d39d93c760.js"],""]
c:["$","html",null,{"lang":"en","className":"h-full","suppressHydrationWarning":true,"children":["$","body",null,{"className":"flex min-h-full bg-white antialiased dark:bg-zinc-900","children":["$","$Le",null,{"children":["$","div",null,{"className":"w-full","children":["$","$Lf",null,{"allSections":{"/":[{"title":"Features","id":"features"},{"title":"Why NestJS-Cognito?","id":"why-nest-js-cognito"}],"/credits":[{"title":"Icons and Visual Assets","id":"icons-and-visual-assets"}],"/quickstart":[{"title":"Installation","id":"installation"},{"title":"Basic Setup","id":"basic-setup"},{"title":"Basic Usage","id":"basic-usage"}],"/api/core-package":[{"title":"Installation","id":"installation"},{"title":"Package Architecture","id":"package-architecture"},{"title":"Basic Usage","id":"basic-usage"},{"title":"Integration with Other Packages","id":"integration-with-other-packages"}],"/api/integration":[{"title":"Common Integration Patterns","id":"common-integration-patterns"},{"title":"Module Integration Examples","id":"module-integration-examples"}],"/api/jwt-verification":[{"title":"JWT Claims Verification","id":"jwt-claims-verification"},{"title":"Cognito JWT Verification","id":"cognito-jwt-verification"},{"title":"RSA JWT Verification","id":"rsa-jwt-verification"}],"/api/module-configuration":[{"title":"Async Configuration","id":"async-configuration"},{"title":"Module Options","id":"module-options"},{"title":"Basic Configuration","id":"basic-configuration"},{"title":"Identity Provider Configuration","id":"identity-provider-configuration"},{"title":"JWT Verification Configuration","id":"jwt-verification-configuration"},{"title":"JWK Cache Configuration","id":"jwk-cache-configuration"},{"title":"Important Notes","id":"important-notes"}],"/guides/authentication":[{"title":"Overview","id":"overview"},{"title":"Basic Setup","id":"basic-setup"},{"title":"Using @Authentication Decorator","id":"using-authentication-decorator"},{"title":"Public Routes","id":"public-routes"},{"title":"Token Verification","id":"token-verification"}],"/guides/authorization":[{"title":"Basic Authorization","id":"basic-authorization"},{"title":"Advanced Rules","id":"advanced-rules"},{"title":"Best Practices","id":"best-practices"}],"/guides/cognito-user":[{"title":"Overview","id":"overview"},{"title":"Usage Patterns","id":"usage-patterns"},{"title":"Available Properties","id":"available-properties"}],"/guides/custom-guards":[{"title":"Understanding AbstractGuard","id":"understanding-abstract-guard"},{"title":"Creating a Custom Guard","id":"creating-a-custom-guard"},{"title":"Using the Custom Guard","id":"using-the-custom-guard"},{"title":"Guard Inheritance Flow","id":"guard-inheritance-flow"},{"title":"Best Practices","id":"best-practices"}],"/guides/public-route":[{"title":"Overview","id":"overview"},{"title":"Basic Usage","id":"basic-usage"},{"title":"How It Works","id":"how-it-works"},{"title":"Token Validation Priority","id":"token-validation-priority"},{"title":"Use Cases","id":"use-cases"},{"title":"Common Patterns","id":"common-patterns"}],"/guides/graphql":[{"title":"Installation","id":"installation"},{"title":"Basic Setup","id":"basic-setup"},{"title":"Authentication","id":"authentication"},{"title":"Authorization","id":"authorization"},{"title":"User Information","id":"user-information"}],"/guides/testing":[{"title":"Getting Started with Testing","id":"getting-started-with-testing"},{"title":"HTTP Testing with Pactum","id":"http-testing-with-pactum"},{"title":"Real E2E Testing","id":"real-e2-e-testing"},{"title":"Mock Testing","id":"mock-testing"},{"title":"Testing Scenarios","id":"testing-scenarios"},{"title":"Advanced Testing","id":"advanced-testing"}],"/guides/websocket":[{"title":"Overview","id":"overview"},{"title":"Implementation","id":"implementation"}]},"children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"mx-auto flex h-full max-w-xl flex-col items-center justify-center py-16 text-center","children":[["$","p",null,{"className":"text-sm font-semibold text-zinc-900 dark:text-white","children":"404"}],["$","h1",null,{"className":"mt-2 text-2xl font-bold text-zinc-900 dark:text-white","children":"Page not found"}],["$","p",null,{"className":"mt-2 text-base text-zinc-600 dark:text-zinc-400","children":"Sorry, we couldn’t find the page you’re looking for."}],["$","$L10",null,{"className":"inline-flex gap-0.5 justify-center overflow-hidden text-sm font-medium transition rounded-full bg-zinc-900 py-1 px-3 text-white hover:bg-zinc-700 dark:bg-emerald-400/10 dark:text-emerald-400 dark:ring-1 dark:ring-inset dark:ring-emerald-400/20 dark:hover:bg-emerald-400/10 dark:hover:text-emerald-300 dark:hover:ring-emerald-300 mt-8","href":"/","children":[false,"Back to docs",["$","svg",null,{"viewBox":"0 0 20 20","fill":"none","aria-hidden":"true","className":"mt-0.5 h-5 w-5 -mr-1","children":["$","path",null,{"stroke":"currentColor","strokeLinecap":"round","strokeLinejoin":"round","d":"m11.5 6.5 3 3.5m0 0-3 3.5m3-3.5h-9"}]}]]}]]}],"notFoundStyles":[]}]}]}]}]}]}]
