2:I[8017,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","663","static/chunks/app/guides/custom-guards/page-5e445df35a27dc7b.js"],"Code"]
3:I[1995,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","663","static/chunks/app/guides/custom-guards/page-5e445df35a27dc7b.js"],"Heading"]
4:I[8017,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","663","static/chunks/app/guides/custom-guards/page-5e445df35a27dc7b.js"],"Pre"]
7:I[9943,[],""]
8:I[249,[],""]
5:T1654,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { Injectable } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@nestjs/common&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { AbstractGuard } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@nestjs-cognito/auth&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { ExecutionContext } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@nestjs/common&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { User } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@nestjs-cognito/auth&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Injectable</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">CompanyEmailGuard</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">extends</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AbstractGuard</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/**</span></span>
<span><span style="color: var(--shiki-token-comment)">   * Validate if the user&#39;s email belongs to the company domain</span></span>
<span><span style="color: var(--shiki-token-comment)">   */</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">protected</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">onValidate</span><span style="color: var(--shiki-color-text)">(user</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">User</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">boolean</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">user</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">email</span><span style="color: var(--shiki-token-function)">.endsWith</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;@company.com&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/**</span></span>
<span><span style="color: var(--shiki-token-comment)">   * Get the request object from the execution context</span></span>
<span><span style="color: var(--shiki-token-comment)">   */</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">protected</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">getRequest</span><span style="color: var(--shiki-color-text)">(context</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ExecutionContext</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">context</span><span style="color: var(--shiki-token-function)">.switchToHttp</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-function)">.getRequest</span><span style="color: var(--shiki-color-text)">();</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>6:Tb22,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { Controller</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> Get</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> UseGuards } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@nestjs/common&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { CompanyEmailGuard } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;./company-email.guard&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">Controller</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;protected&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">@</span><span style="color: var(--shiki-token-function)">UseGuards</span><span style="color: var(--shiki-color-text)">(CompanyEmailGuard)</span></span>
<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ProtectedController</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  @</span><span style="color: var(--shiki-token-function)">Get</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">getProtectedResource</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;This is only accessible to users with company email&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>0:["AG1NeZbtIS3t-faK8XZ-V",[[["",{"children":["guides",{"children":["custom-guards",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",{"children":["guides",{"children":["custom-guards",{"children":["__PAGE__",{},[["$L1",["$","article",null,{"className":"flex h-full flex-col pb-10 pt-16","children":[["$","div",null,{"className":"flex-auto prose dark:prose-invert [html_:where(&>*)]:mx-auto [html_:where(&>*)]:max-w-2xl [html_:where(&>*)]:lg:mx-[calc(50%-min(50%,theme(maxWidth.lg)))] [html_:where(&>*)]:lg:max-w-3xl","children":[["$","h1",null,{"children":"Custom Guards"}],"\n",["$","p",null,{"children":["The ",["$","$L2",null,{"children":"@nestjs-cognito/auth"}]," package provides an abstract guard class that you can extend to create custom guards with specific validation logic. This guide will show you how to create custom guards by extending the ",["$","$L2",null,{"children":"AbstractGuard"}]," class."]}],"\n",["$","$L3",null,{"level":2,"id":"understanding-abstract-guard","children":"Understanding AbstractGuard"}],"\n",["$","p",null,{"children":["The ",["$","$L2",null,{"children":"AbstractGuard"}]," class provides the core authentication functionality, including JWT verification and request handling. When you extend this class, you only need to implement two abstract methods:"]}],"\n",["$","$L4",null,{"language":"typescript","code":"protected abstract onValidate(user: User): boolean;\nprotected abstract getRequest(context: ExecutionContext): any;\n","children":["$","$L2",null,{"className":"language-typescript","children":"<span><span style=\"color: var(--shiki-color-text)\">protected abstract </span><span style=\"color: var(--shiki-token-function)\">onValidate</span><span style=\"color: var(--shiki-color-text)\">(user: User): boolean;</span></span>\n<span><span style=\"color: var(--shiki-color-text)\">protected abstract </span><span style=\"color: var(--shiki-token-function)\">getRequest</span><span style=\"color: var(--shiki-color-text)\">(context: ExecutionContext): any;</span></span>\n<span></span>"}]}],"\n",["$","$L3",null,{"level":2,"id":"creating-a-custom-guard","children":"Creating a Custom Guard"}],"\n",["$","p",null,{"children":"Here's an example of creating a custom guard that validates if a user has a specific email domain:"}],"\n",["$","$L4",null,{"language":"typescript","code":"import { Injectable } from '@nestjs/common';\nimport { AbstractGuard } from '@nestjs-cognito/auth';\nimport { ExecutionContext } from '@nestjs/common';\nimport { User } from '@nestjs-cognito/auth';\n\n@Injectable()\nexport class CompanyEmailGuard extends AbstractGuard {\n  /**\n   * Validate if the user's email belongs to the company domain\n   */\n  protected onValidate(user: User): boolean {\n    return user.email.endsWith('@company.com');\n  }\n\n  /**\n   * Get the request object from the execution context\n   */\n  protected getRequest(context: ExecutionContext) {\n    return context.switchToHttp().getRequest();\n  }\n}\n","children":["$","$L2",null,{"className":"language-typescript","children":"$5"}]}],"\n",["$","$L3",null,{"level":2,"id":"using-the-custom-guard","children":"Using the Custom Guard"}],"\n",["$","p",null,{"children":"You can use your custom guard like any other NestJS guard:"}],"\n",["$","$L4",null,{"language":"typescript","code":"import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { CompanyEmailGuard } from './company-email.guard';\n\n@Controller('protected')\n@UseGuards(CompanyEmailGuard)\nexport class ProtectedController {\n  @Get()\n  getProtectedResource() {\n    return 'This is only accessible to users with company email';\n  }\n}\n","children":["$","$L2",null,{"className":"language-typescript","children":"$6"}]}],"\n",["$","$L3",null,{"level":2,"id":"guard-inheritance-flow","children":"Guard Inheritance Flow"}],"\n",["$","p",null,{"children":"When a request comes in, the following flow occurs:"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["The ",["$","$L2",null,{"children":"AbstractGuard.canActivate()"}]," method is called first"]}],"\n",["$","li",null,{"children":"It verifies the JWT token and extracts the user information"}],"\n",["$","li",null,{"children":["If the route is not public, it calls your custom guard's ",["$","$L2",null,{"children":"onValidate()"}]," method"]}],"\n",["$","li",null,{"children":"Your validation logic determines if the request is allowed"}],"\n"]}],"\n",["$","$L3",null,{"level":2,"id":"best-practices","children":"Best Practices"}],"\n",["$","h3",null,{"children":"Implementing getRequest"}],"\n",["$","p",null,{"children":["The ",["$","$L2",null,{"children":"getRequest"}]," method should handle the appropriate request type. For HTTP requests:"]}],"\n",["$","$L4",null,{"language":"typescript","code":"protected getRequest(context: ExecutionContext) {\n  return context.switchToHttp().getRequest();\n}\n","children":["$","$L2",null,{"className":"language-typescript","children":"<span><span style=\"color: var(--shiki-color-text)\">protected </span><span style=\"color: var(--shiki-token-function)\">getRequest</span><span style=\"color: var(--shiki-color-text)\">(context: ExecutionContext) {</span></span>\n<span><span style=\"color: var(--shiki-color-text)\">  </span><span style=\"color: var(--shiki-token-keyword)\">return</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">context</span><span style=\"color: var(--shiki-token-function)\">.switchToHttp</span><span style=\"color: var(--shiki-color-text)\">()</span><span style=\"color: var(--shiki-token-function)\">.getRequest</span><span style=\"color: var(--shiki-color-text)\">();</span></span>\n<span><span style=\"color: var(--shiki-color-text)\">}</span></span>\n<span></span>"}]}],"\n",["$","p",null,{"children":"For WebSocket requests:"}],"\n",["$","$L4",null,{"language":"typescript","code":"protected getRequest(context: ExecutionContext) {\n  return context.switchToWs().getClient();\n}\n","children":["$","$L2",null,{"className":"language-typescript","children":"<span><span style=\"color: var(--shiki-color-text)\">protected </span><span style=\"color: var(--shiki-token-function)\">getRequest</span><span style=\"color: var(--shiki-color-text)\">(context: ExecutionContext) {</span></span>\n<span><span style=\"color: var(--shiki-color-text)\">  </span><span style=\"color: var(--shiki-token-keyword)\">return</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">context</span><span style=\"color: var(--shiki-token-function)\">.switchToWs</span><span style=\"color: var(--shiki-color-text)\">()</span><span style=\"color: var(--shiki-token-function)\">.getClient</span><span style=\"color: var(--shiki-color-text)\">();</span></span>\n<span><span style=\"color: var(--shiki-color-text)\">}</span></span>\n<span></span>"}]}],"\n",["$","h3",null,{"children":"Validation Logic"}],"\n",["$","p",null,{"children":["Your ",["$","$L2",null,{"children":"onValidate"}]," method should:"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Be focused and handle one specific validation concern"}],"\n",["$","li",null,{"children":"Return a boolean indicating if the validation passed"}],"\n",["$","li",null,{"children":"Not throw exceptions (the abstract guard handles that)"}],"\n",["$","li",null,{"children":"Be efficient as it runs on every request"}],"\n"]}]]}],["$","footer",null,{"className":"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl"}]]}],null],null],null]},[null,["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","guides","children","custom-guards","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","guides","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/nestjs-cognito/_next/static/css/7f0c2e5300d2e547.css","precedence":"next","crossOrigin":"$undefined"}]],"$L9"],null],null],["$La",null]]]]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Custom Guards - NestJS Cognito - NestJS-Cognito"}],["$","meta","3",{"name":"description","content":"Learn how to create custom authentication guards by extending the AbstractGuard class in NestJS-Cognito."}],["$","link","4",{"rel":"icon","href":"/favicon.ico"}]]
1:null
b:I[6639,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","384","static/chunks/384-9c61028d6b9f3d71.js","802","static/chunks/802-794afc6f7dd2dd66.js","185","static/chunks/app/layout-962d22ed320370d7.js"],"Providers"]
c:I[9179,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","384","static/chunks/384-9c61028d6b9f3d71.js","802","static/chunks/802-794afc6f7dd2dd66.js","185","static/chunks/app/layout-962d22ed320370d7.js"],"Layout"]
d:I[9727,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","663","static/chunks/app/guides/custom-guards/page-5e445df35a27dc7b.js"],""]
9:["$","html",null,{"lang":"en","className":"h-full","suppressHydrationWarning":true,"children":["$","body",null,{"className":"flex min-h-full bg-white antialiased dark:bg-zinc-900","children":["$","$Lb",null,{"children":["$","div",null,{"className":"w-full","children":["$","$Lc",null,{"allSections":{"/":[{"title":"Features","id":"features"},{"title":"Why NestJS-Cognito?","id":"why-nest-js-cognito"}],"/credits":[{"title":"Icons and Visual Assets","id":"icons-and-visual-assets"}],"/quickstart":[{"title":"Installation","id":"installation"},{"title":"Basic Setup","id":"basic-setup"},{"title":"Basic Usage","id":"basic-usage"}],"/api/core-package":[{"title":"Installation","id":"installation"},{"title":"Package Architecture","id":"package-architecture"},{"title":"Basic Usage","id":"basic-usage"},{"title":"Integration with Other Packages","id":"integration-with-other-packages"}],"/api/integration":[{"title":"Common Integration Patterns","id":"common-integration-patterns"},{"title":"Module Integration Examples","id":"module-integration-examples"}],"/api/jwt-verification":[{"title":"JWT Claims Verification","id":"jwt-claims-verification"},{"title":"Cognito JWT Verification","id":"cognito-jwt-verification"},{"title":"RSA JWT Verification","id":"rsa-jwt-verification"}],"/api/module-configuration":[{"title":"Async Configuration","id":"async-configuration"},{"title":"Module Options","id":"module-options"},{"title":"Basic Configuration","id":"basic-configuration"},{"title":"Identity Provider Configuration","id":"identity-provider-configuration"},{"title":"JWT Verification Configuration","id":"jwt-verification-configuration"},{"title":"JWK Cache Configuration","id":"jwk-cache-configuration"},{"title":"Important Notes","id":"important-notes"}],"/guides/authentication":[{"title":"Overview","id":"overview"},{"title":"Basic Setup","id":"basic-setup"},{"title":"Using @Authentication Decorator","id":"using-authentication-decorator"},{"title":"Public Routes","id":"public-routes"},{"title":"Token Verification","id":"token-verification"}],"/guides/cognito-user":[{"title":"Overview","id":"overview"},{"title":"Usage Patterns","id":"usage-patterns"},{"title":"Available Properties","id":"available-properties"}],"/guides/authorization":[{"title":"Basic Authorization","id":"basic-authorization"},{"title":"Advanced Rules","id":"advanced-rules"},{"title":"Best Practices","id":"best-practices"}],"/guides/custom-guards":[{"title":"Understanding AbstractGuard","id":"understanding-abstract-guard"},{"title":"Creating a Custom Guard","id":"creating-a-custom-guard"},{"title":"Using the Custom Guard","id":"using-the-custom-guard"},{"title":"Guard Inheritance Flow","id":"guard-inheritance-flow"},{"title":"Best Practices","id":"best-practices"}],"/guides/graphql":[{"title":"Installation","id":"installation"},{"title":"Basic Setup","id":"basic-setup"},{"title":"Authentication","id":"authentication"},{"title":"Authorization","id":"authorization"},{"title":"User Information","id":"user-information"}],"/guides/public-route":[{"title":"Overview","id":"overview"},{"title":"Basic Usage","id":"basic-usage"},{"title":"How It Works","id":"how-it-works"},{"title":"Token Validation Priority","id":"token-validation-priority"},{"title":"Use Cases","id":"use-cases"},{"title":"Common Patterns","id":"common-patterns"}],"/guides/testing":[{"title":"Getting Started with Testing","id":"getting-started-with-testing"},{"title":"HTTP Testing with Pactum","id":"http-testing-with-pactum"},{"title":"Real E2E Testing","id":"real-e2-e-testing"},{"title":"Mock Testing","id":"mock-testing"},{"title":"Testing Scenarios","id":"testing-scenarios"},{"title":"Advanced Testing","id":"advanced-testing"}],"/guides/websocket":[{"title":"Overview","id":"overview"},{"title":"Implementation","id":"implementation"}]},"children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"mx-auto flex h-full max-w-xl flex-col items-center justify-center py-16 text-center","children":[["$","p",null,{"className":"text-sm font-semibold text-zinc-900 dark:text-white","children":"404"}],["$","h1",null,{"className":"mt-2 text-2xl font-bold text-zinc-900 dark:text-white","children":"Page not found"}],["$","p",null,{"className":"mt-2 text-base text-zinc-600 dark:text-zinc-400","children":"Sorry, we couldn’t find the page you’re looking for."}],["$","$Ld",null,{"className":"inline-flex gap-0.5 justify-center overflow-hidden text-sm font-medium transition rounded-full bg-zinc-900 py-1 px-3 text-white hover:bg-zinc-700 dark:bg-emerald-400/10 dark:text-emerald-400 dark:ring-1 dark:ring-inset dark:ring-emerald-400/20 dark:hover:bg-emerald-400/10 dark:hover:text-emerald-300 dark:hover:ring-emerald-300 mt-8","href":"/","children":[false,"Back to docs",["$","svg",null,{"viewBox":"0 0 20 20","fill":"none","aria-hidden":"true","className":"mt-0.5 h-5 w-5 -mr-1","children":["$","path",null,{"stroke":"currentColor","strokeLinecap":"round","strokeLinejoin":"round","d":"m11.5 6.5 3 3.5m0 0-3 3.5m3-3.5h-9"}]}]]}]]}],"notFoundStyles":[]}]}]}]}]}]}]
