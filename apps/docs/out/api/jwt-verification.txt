2:I[1995,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","410","static/chunks/app/api/jwt-verification/page-e1d12e40785e64e2.js"],"Heading"]
3:I[8017,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","410","static/chunks/app/api/jwt-verification/page-e1d12e40785e64e2.js"],"Code"]
4:I[8017,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","410","static/chunks/app/api/jwt-verification/page-e1d12e40785e64e2.js"],"Pre"]
7:I[9943,[],""]
8:I[249,[],""]
5:Tc90,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  CognitoJwtVerifier</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  InjectCognitoJwtVerifier</span></span>
<span><span style="color: var(--shiki-color-text)">} </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;@nestjs-cognito/core&quot;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">MyService</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">constructor</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">    @</span><span style="color: var(--shiki-token-function)">InjectCognitoJwtVerifier</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">private</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">readonly</span><span style="color: var(--shiki-color-text)"> jwtVerifier</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">CognitoJwtVerifier</span></span>
<span><span style="color: var(--shiki-color-text)">  ) {}</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">verifyToken</span><span style="color: var(--shiki-color-text)">(token</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">jwtVerifier</span><span style="color: var(--shiki-token-function)">.verify</span><span style="color: var(--shiki-color-text)">(token);</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>6:Tc88,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  JwtRsaVerifier</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  InjectCognitoJwtVerifier</span></span>
<span><span style="color: var(--shiki-color-text)">} </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;@nestjs-cognito/core&quot;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">MyService</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">constructor</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">    @</span><span style="color: var(--shiki-token-function)">InjectCognitoJwtVerifier</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">private</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">readonly</span><span style="color: var(--shiki-color-text)"> jwtVerifier</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">JwtRsaVerifier</span></span>
<span><span style="color: var(--shiki-color-text)">  ) {}</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">verifyToken</span><span style="color: var(--shiki-color-text)">(token</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">jwtVerifier</span><span style="color: var(--shiki-token-function)">.verify</span><span style="color: var(--shiki-color-text)">(token);</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>0:["AG1NeZbtIS3t-faK8XZ-V",[[["",{"children":["api",{"children":["jwt-verification",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",{"children":["api",{"children":["jwt-verification",{"children":["__PAGE__",{},[["$L1",["$","article",null,{"className":"flex h-full flex-col pb-10 pt-16","children":[["$","div",null,{"className":"flex-auto prose dark:prose-invert [html_:where(&>*)]:mx-auto [html_:where(&>*)]:max-w-2xl [html_:where(&>*)]:lg:mx-[calc(50%-min(50%,theme(maxWidth.lg)))] [html_:where(&>*)]:lg:max-w-3xl","children":[["$","h1",null,{"children":"JWT Verification"}],"\n",["$","p",null,{"children":"The @nestjs-cognito/core package provides two mutually exclusive JWT verification implementations that share the same injection token. The implementation you get depends on your module configuration."}],"\n",["$","$L2",null,{"level":2,"id":"jwt-claims-verification","children":"JWT Claims Verification"}],"\n",["$","p",null,{"children":"Both implementations perform comprehensive JWT claims verification according to AWS Cognito standards:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"Expiration Check"}],": Verifies the ",["$","$L3",null,{"children":"exp"}]," claim to ensure the token hasn't expired"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Audience Validation"}],":","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["For ID tokens: Validates the ",["$","$L3",null,{"children":"aud"}]," claim matches the app's client ID"]}],"\n",["$","li",null,{"children":["For Access tokens: Validates the ",["$","$L3",null,{"children":"client_id"}]," claim matches the app's client ID"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Issuer Verification"}],": Validates the ",["$","$L3",null,{"children":"iss"}]," claim matches your Cognito User Pool's issuer URL format:\n",["$","$L3",null,{"children":"https://cognito-idp.[REGION].amazonaws.com/[USER_POOL_ID]"}]]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Token Use Verification"}],": Validates the ",["$","$L3",null,{"children":"token_use"}]," claim:","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Must be ",["$","$L3",null,{"children":"access"}]," for access tokens"]}],"\n",["$","li",null,{"children":["Must be ",["$","$L3",null,{"children":"id"}]," for ID tokens"]}],"\n",["$","li",null,{"children":["Can be set to ",["$","$L3",null,{"children":"null"}]," to accept both token types"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","$L2",null,{"level":2,"id":"cognito-jwt-verification","children":"Cognito JWT Verification"}],"\n",["$","p",null,{"children":["When you configure ",["$","$L3",null,{"children":"jwtVerifier"}]," in your module, this implementation is used to verify JWTs issued by AWS Cognito:"]}],"\n",["$","$L4",null,{"language":"ts","code":"import {\n  CognitoJwtVerifier,\n  InjectCognitoJwtVerifier\n} from \"@nestjs-cognito/core\";\n\nexport class MyService {\n  constructor(\n    @InjectCognitoJwtVerifier()\n    private readonly jwtVerifier: CognitoJwtVerifier\n  ) {}\n\n  async verifyToken(token: string) {\n    return this.jwtVerifier.verify(token);\n  }\n}\n","children":["$","$L3",null,{"className":"language-ts","children":"$5"}]}],"\n",["$","$L2",null,{"level":2,"id":"rsa-jwt-verification","children":"RSA JWT Verification"}],"\n",["$","p",null,{"children":["When you configure ",["$","$L3",null,{"children":"jwtRsaVerifier"}]," in your module, this implementation is used to verify JWTs using RSA public keys:"]}],"\n",["$","$L4",null,{"language":"ts","code":"import {\n  JwtRsaVerifier,\n  InjectCognitoJwtVerifier\n} from \"@nestjs-cognito/core\";\n\nexport class MyService {\n  constructor(\n    @InjectCognitoJwtVerifier()\n    private readonly jwtVerifier: JwtRsaVerifier\n  ) {}\n\n  async verifyToken(token: string) {\n    return this.jwtVerifier.verify(token);\n  }\n}\n","children":["$","$L3",null,{"className":"language-ts","children":"$6"}]}]]}],["$","footer",null,{"className":"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl"}]]}],null],null],null]},[null,["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","api","children","jwt-verification","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","api","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/nestjs-cognito/_next/static/css/7f0c2e5300d2e547.css","precedence":"next","crossOrigin":"$undefined"}]],"$L9"],null],null],["$La",null]]]]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"JWT Verification - NestJS Cognito - NestJS-Cognito"}],["$","meta","3",{"name":"description","content":"Comprehensive guide to JWT verification capabilities in @nestjs-cognito/core"}],["$","link","4",{"rel":"icon","href":"/favicon.ico"}]]
1:null
b:I[6639,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","384","static/chunks/384-9c61028d6b9f3d71.js","802","static/chunks/802-794afc6f7dd2dd66.js","185","static/chunks/app/layout-962d22ed320370d7.js"],"Providers"]
c:I[9179,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","384","static/chunks/384-9c61028d6b9f3d71.js","802","static/chunks/802-794afc6f7dd2dd66.js","185","static/chunks/app/layout-962d22ed320370d7.js"],"Layout"]
d:I[9727,["727","static/chunks/727-307d6dc754c23268.js","985","static/chunks/985-728f8f965d873ae2.js","802","static/chunks/802-794afc6f7dd2dd66.js","410","static/chunks/app/api/jwt-verification/page-e1d12e40785e64e2.js"],""]
9:["$","html",null,{"lang":"en","className":"h-full","suppressHydrationWarning":true,"children":["$","body",null,{"className":"flex min-h-full bg-white antialiased dark:bg-zinc-900","children":["$","$Lb",null,{"children":["$","div",null,{"className":"w-full","children":["$","$Lc",null,{"allSections":{"/":[{"title":"Features","id":"features"},{"title":"Why NestJS-Cognito?","id":"why-nest-js-cognito"}],"/credits":[{"title":"Icons and Visual Assets","id":"icons-and-visual-assets"}],"/quickstart":[{"title":"Installation","id":"installation"},{"title":"Basic Setup","id":"basic-setup"},{"title":"Basic Usage","id":"basic-usage"}],"/api/core-package":[{"title":"Installation","id":"installation"},{"title":"Package Architecture","id":"package-architecture"},{"title":"Basic Usage","id":"basic-usage"},{"title":"Integration with Other Packages","id":"integration-with-other-packages"}],"/api/integration":[{"title":"Common Integration Patterns","id":"common-integration-patterns"},{"title":"Module Integration Examples","id":"module-integration-examples"}],"/api/jwt-verification":[{"title":"JWT Claims Verification","id":"jwt-claims-verification"},{"title":"Cognito JWT Verification","id":"cognito-jwt-verification"},{"title":"RSA JWT Verification","id":"rsa-jwt-verification"}],"/api/module-configuration":[{"title":"Async Configuration","id":"async-configuration"},{"title":"Module Options","id":"module-options"},{"title":"Basic Configuration","id":"basic-configuration"},{"title":"Identity Provider Configuration","id":"identity-provider-configuration"},{"title":"JWT Verification Configuration","id":"jwt-verification-configuration"},{"title":"JWK Cache Configuration","id":"jwk-cache-configuration"},{"title":"Important Notes","id":"important-notes"}],"/guides/authentication":[{"title":"Overview","id":"overview"},{"title":"Basic Setup","id":"basic-setup"},{"title":"Using @Authentication Decorator","id":"using-authentication-decorator"},{"title":"Public Routes","id":"public-routes"},{"title":"Token Verification","id":"token-verification"}],"/guides/authorization":[{"title":"Basic Authorization","id":"basic-authorization"},{"title":"Advanced Rules","id":"advanced-rules"},{"title":"Best Practices","id":"best-practices"}],"/guides/cognito-user":[{"title":"Overview","id":"overview"},{"title":"Usage Patterns","id":"usage-patterns"},{"title":"Available Properties","id":"available-properties"}],"/guides/custom-guards":[{"title":"Understanding AbstractGuard","id":"understanding-abstract-guard"},{"title":"Creating a Custom Guard","id":"creating-a-custom-guard"},{"title":"Using the Custom Guard","id":"using-the-custom-guard"},{"title":"Guard Inheritance Flow","id":"guard-inheritance-flow"},{"title":"Best Practices","id":"best-practices"}],"/guides/graphql":[{"title":"Installation","id":"installation"},{"title":"Basic Setup","id":"basic-setup"},{"title":"Authentication","id":"authentication"},{"title":"Authorization","id":"authorization"},{"title":"User Information","id":"user-information"}],"/guides/public-route":[{"title":"Overview","id":"overview"},{"title":"Basic Usage","id":"basic-usage"},{"title":"How It Works","id":"how-it-works"},{"title":"Token Validation Priority","id":"token-validation-priority"},{"title":"Use Cases","id":"use-cases"},{"title":"Common Patterns","id":"common-patterns"}],"/guides/testing":[{"title":"Getting Started with Testing","id":"getting-started-with-testing"},{"title":"HTTP Testing with Pactum","id":"http-testing-with-pactum"},{"title":"Real E2E Testing","id":"real-e2-e-testing"},{"title":"Mock Testing","id":"mock-testing"},{"title":"Testing Scenarios","id":"testing-scenarios"},{"title":"Advanced Testing","id":"advanced-testing"}],"/guides/websocket":[{"title":"Overview","id":"overview"},{"title":"Implementation","id":"implementation"}]},"children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"mx-auto flex h-full max-w-xl flex-col items-center justify-center py-16 text-center","children":[["$","p",null,{"className":"text-sm font-semibold text-zinc-900 dark:text-white","children":"404"}],["$","h1",null,{"className":"mt-2 text-2xl font-bold text-zinc-900 dark:text-white","children":"Page not found"}],["$","p",null,{"className":"mt-2 text-base text-zinc-600 dark:text-zinc-400","children":"Sorry, we couldn’t find the page you’re looking for."}],["$","$Ld",null,{"className":"inline-flex gap-0.5 justify-center overflow-hidden text-sm font-medium transition rounded-full bg-zinc-900 py-1 px-3 text-white hover:bg-zinc-700 dark:bg-emerald-400/10 dark:text-emerald-400 dark:ring-1 dark:ring-inset dark:ring-emerald-400/20 dark:hover:bg-emerald-400/10 dark:hover:text-emerald-300 dark:hover:ring-emerald-300 mt-8","href":"/","children":[false,"Back to docs",["$","svg",null,{"viewBox":"0 0 20 20","fill":"none","aria-hidden":"true","className":"mt-0.5 h-5 w-5 -mr-1","children":["$","path",null,{"stroke":"currentColor","strokeLinecap":"round","strokeLinejoin":"round","d":"m11.5 6.5 3 3.5m0 0-3 3.5m3-3.5h-9"}]}]]}]]}],"notFoundStyles":[]}]}]}]}]}]}]
